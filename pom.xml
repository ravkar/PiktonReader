<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- POM file generated with GWT webAppCreator -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.pikton</groupId>
  <artifactId>pikton-reader-app</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>net.pikton.ReaderApp</name>
  
  <properties>
      <maven.compiler.source>1.5</maven.compiler.source>
      <maven.compiler.target>1.5</maven.compiler.target>
      <jettyVersion>7.2.0.v20101020</jettyVersion>
      <zxingVersion>1.0</zxingVersion>   
      <readerMainClass>net.pikton.reader.ApplicationMain</readerMainClass>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>              
  </properties>

  <dependencies>
    <dependency>
    <artifactId>core</artifactId>
    <groupId>zxing</groupId>
      <version>${zxingVersion}</version>
      <scope>compile</scope>          
    </dependency>  
    
	<dependency>
	    <groupId>org.json</groupId>
	    <artifactId>json</artifactId>
	    <version>1.0</version>
        <scope>compile</scope>  	    
	</dependency>    
    
	<dependency>
	    <groupId>javax.media</groupId>
	    <artifactId>jmf</artifactId>
	    <version>2.1.1e</version>
        <scope>compile</scope>  	    
	</dependency>
    
  
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jettyVersion}</version>
      <scope>compile</scope>          
    </dependency>
    
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-continuation</artifactId>
      <version>${jettyVersion}</version>
      <scope>compile</scope>          
    </dependency>    
    
    <dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>servlet-api</artifactId>
	    <version>2.5</version>	    
	</dependency>
            
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
    
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-log4j12</artifactId>
	    <version>1.6.1</version>
        <scope>compile</scope>    	    
	</dependency>
        
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.12</version>
      <scope>compile</scope>
    </dependency>    
  </dependencies>
  
  <build>
    <!-- Generate compiled stuff in the folder used for developing mode --> 
<!--    <outputDirectory>target/www/WEB-INF/classes</outputDirectory>-->
    
    <plugins>
      
      <!-- Add source folders to test classpath in order to run gwt-tests as normal junit-tests -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <additionalClasspathElements>
            <additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
            <additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
          </additionalClasspathElements>
          <useManifestOnlyJar>false</useManifestOnlyJar>
          <forkMode>always</forkMode>

          <!-- Folder for generated testing stuff --> 
          <systemProperties>
            <property>
              <name>gwt.args</name>
              <value>-out target/www</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
            
      <plugin>
        <!-- This plugin is needed for the servlet example -->
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jettyVersion}</version>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution><goals><goal>java</goal></goals></execution>
        </executions>
        <configuration>
          <mainClass>${readerMainClass}</mainClass>
          <systemProperties>
            <systemProperty>
              <key>reader.home</key>
              <value>src/main/resources</value>
            </systemProperty>
            <systemProperty>
              <key>java.library.path</key>
              <value>"src/main/resources/lib"</value>
            </systemProperty>            
          </systemProperties>
          
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>      
          <archive>          
            <manifest>
              <mainClass>${readerMainClass}</mainClass>
              <addClasspath>true</addClasspath>
            </manifest>            
          </archive>
        </configuration>     
      </plugin>
      
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2</version>
        <configuration>        
<!--          <descriptorRefs>-->
<!--            <descriptorRef>jar-with-dependencies</descriptorRef>          -->
<!--          </descriptorRefs>-->
          <descriptors>
            <descriptor>src/main/assembly/pikton-reader-bin.xml</descriptor>
          </descriptors>                    
          <archive>
            <manifest>
              <mainClass>${readerMainClass}</mainClass>
            </manifest>
          </archive>          
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>  
            <phase>package</phase>  
            <goals>
              <goal>single</goal>  
            </goals>
          </execution>
        </executions>        
      </plugin>  
              
    </plugins>
  </build>
</project>


